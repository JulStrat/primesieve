{"name":"Primesieve","tagline":"Fast C++ prime number generator","body":"primesieve\r\n==========\r\nprimesieve is a software program and C/C++ library for fast prime\r\nnumber generation. It generates the primes below 10^9 in just 0.2\r\nseconds on a single core of an Intel Core i7-4770 CPU from 2013.\r\nprimesieve can generate primes and prime k-tuplets (twin primes, prime\r\ntriplets, ...) up to 2^64.\r\n\r\n* Homepage: https://primesieve.org\r\n* Downloads: https://primesieve.org/downloads\r\n* API: https://primesieve.org/api\r\n* Screenshots: https://primesieve.org/screenshots\r\n\r\n### Algorithm complexity\r\nprimesieve generates primes using the segmented sieve of Eratosthenes\r\nwith wheel factorization, this algorithm has a complexity of\r\nO(n log log n) operations and uses O(sqrt(n)) space. primesieve's\r\nmemory requirement per thread is about pi(sqrt(n)) * 8 bytes + 32\r\nkilobytes.\r\n\r\n### Requirements\r\nprimesieve is written in C++03 and includes C bindings for all of its\r\nfunctions so that it can easily be used in languages other than C++.\r\nprimesieve compiles with every standard compliant C++ compiler and\r\nruns on both little and big endian CPUs. The parallelization is\r\nimplemented using OpenMP 2.0 or later.\r\n\r\n### Build instructions\r\nDownload the latest release tarball from\r\nhttps://primesieve.org/downloads. On Unix-like operating systems you\r\ncan then build and install primesieve using:\r\n\r\n```\r\n$ ./configure\r\n$ make\r\n$ sudo make install\r\n```\r\n\r\nOn Windows (MSVC) open a Visual Studio Command Prompt and cd into the\r\nprimesieve directory. Then build primesieve using the following\r\ncommand:\r\n\r\n```\r\n> nmake -f Makefile.msvc\r\n```\r\n\r\nBuilding primesieve is covered in more detail in the\r\n[INSTALL](INSTALL) file.\r\n\r\n### primesieve console application\r\nThe primesieve console application can print and count primes and\r\nprime k-tuplets and find the nth prime. Below are a few usage examples:\r\n\r\nPrint the primes below 1000 to the standard output:\r\n```\r\n$ ./primesieve 1000 --print\r\n```\r\n\r\nCount the prime triplets inside the interval [1e10, 2e10]:\r\n```\r\n$ ./primesieve 1e10 2e10 --count=3\r\n```\r\n\r\nPrint the help menu:\r\n```\r\n$ ./primesieve --help\r\n```\r\n\r\n### primesieve C++ library\r\nAfter having built and installed primesieve you can easily use it in\r\nyour C++ program, below is an example. primesieve's API is documented\r\nonline at https://primesieve.org/api.\r\n\r\n```C++\r\n#include <primesieve.hpp>\r\n#include <iostream>\r\n#include <vector>\r\n\r\nint main()\r\n{\r\n  std::vector<int> primes;\r\n  // store the primes below 1000\r\n  primesieve::generate_primes(1000, &primes);\r\n\r\n  primesieve::iterator pi;\r\n  uint64_t prime;\r\n\r\n  // iterate over the primes below 10^9\r\n  while ((prime = pi.next_prime()) < 1000000000)\r\n    std::cout << prime << std::endl;\r\n\r\n  return 0;\r\n}\r\n```\r\n\r\nOn Unix-like operating systems compile using:\r\n```\r\n$ c++ -O2 primes.cpp -lprimesieve\r\n```\r\n\r\nOn Windows (MSVC) compile using:\r\n```\r\n> cl /O2 /EHsc /Iinclude primes.cpp /link primesieve.lib\r\n```\r\n\r\n### primesieve C bindings\r\nAll of primesieve's functions are exposed as C API via the\r\nprimesieve.h header. You can explore primesieve's C API online\r\nat https://primesieve.org/api.\r\n\r\n```C\r\n#include <primesieve.h>\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n  uint64_t start = 0;\r\n  uint64_t stop = 10000;\r\n  size_t i;\r\n  size_t size;\r\n\r\n  /* store the primes below 10000 */\r\n  int* primes = (int*) primesieve_generate_primes(start, stop, &size, INT_PRIMES);\r\n\r\n  for (i = 0; i < size; i++)\r\n    printf(\"%i\\n\", primes[i]);\r\n\r\n  /* deallocate primes array generated using primesieve */\r\n  primesieve_free(primes);\r\n\r\n  primesieve_iterator pi;\r\n  primesieve_init(&pi);\r\n\r\n  uint64_t sum = 0;\r\n  uint64_t prime = 0;\r\n\r\n  /* iterate over the primes below 10^9 */\r\n  while ((prime = primesieve_next_prime(&pi)) < 1000000000)\r\n    sum += prime;\r\n\r\n  primesieve_free_iterator(&pi);\r\n  printf(\"Sum of the primes below 10^9 = %llu\\n\", sum);\r\n  return 0;\r\n}\r\n```\r\n\r\nOn Unix-like operating systems compile using:\r\n```\r\n$ cc -O2 primes.c -lprimesieve\r\n```\r\n\r\n### Reporting bugs\r\nTo report a bug or give feedback please send an email to\r\n<<kim.walisch@gmail.com>>.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}