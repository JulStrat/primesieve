# Test configuration for Travis CI. See <https://travis-ci.org/>.
language: cpp

branches:
  except:
    - gh-pages

compiler:
  - gcc
  - clang

env:
  global:
    - CXXFLAGS="-O3 -g -DDEBUG -Wall -Wextra -Werror -pedantic -Wno-missing-braces"
    - CFLAGS="-O3 -g -Wall -Wextra -Werror -pedantic -Wno-missing-braces"
    - SANITIZER_FLAGS="-O1 -fsanitize=address -fsanitize=undefined -fno-sanitize-recover=all -fno-omit-frame-pointer"

before_install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -qq

install:
  - sudo apt-get install -y gcc-5 g++-5 make cmake ninja-build cppcheck doxygen doxygen-latex help2man graphviz libqt4-dev qt4-qmake valgrind
  - sudo rm -f /usr/bin/gcc
  - sudo rm -f /usr/bin/g++
  - sudo ln -s /usr/bin/gcc-5 /usr/bin/gcc
  - sudo ln -s /usr/bin/g++-5 /usr/bin/g++

script:
  # 1) Build using GNU make
  - mkdir build
  - cd build
  - cmake -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON -DBUILD_DOC=ON -DCMAKE_INSTALL_PREFIX=$(pwd) ..
  - make -j4 VERBOSE=1
  - make doc >/dev/null
  - make install
  - cd ..
  - rm -rf build
  # 2) Build primesieve GUI app
  - cd src/gui
  - qmake QMAKE_CXX=$CXX QMAKE_CC=$CC
  - make -j4
  - cd ../..
  # 3) Build using ninja
  - sed -i 's#if(HELP2MAN)#if(DISABLE_HELP2MAN)#g' CMakeLists.txt
  - mkdir build
  - cd build
  - if [ "$CXX" = "g++" ]; then cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON -DBUILD_DOC=ON ..; fi
  - if [ "$CXX" = "clang++" ]; then cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="$SANITIZER_FLAGS" -DCMAKE_C_FLAGS="$SANITIZER_FLAGS" -DBUILD_SHARED_LIBS=OFF -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON -DBUILD_DOC=ON ..; fi
  - ninja -v
  - ninja doc >/dev/null
  # 4) Run integration tests
  - ninja test
  - test/cpu_info
  - test/atomic
  # 5) Test printing primes and prime k-tuplets
  - if [ "$(./primesieve 1e8 -p | md5sum | cut -f1 -d' ')" != "1b83b0d4857a4bba7971bcfc0da907c4" ]; then exit 1; fi
  - if [ "$(./primesieve 1e8 -p2 | md5sum | cut -f1 -d' ')" != "a5f2ab0c0da4aa8b1d07ee97a30a4f56" ]; then exit 1; fi
  - if [ "$(./primesieve 1e8 -p3 | md5sum | cut -f1 -d' ')" != "4167bc8f5e2d234cc22429acb33be538" ]; then exit 1; fi
  - if [ "$(./primesieve 1e8 -p4 | md5sum | cut -f1 -d' ')" != "8a2954fb70c5943e38070b07f69ffb2a" ]; then exit 1; fi
  - if [ "$(./primesieve 1e8 -p5 | md5sum | cut -f1 -d' ')" != "7e77159c071d0fb67cb2157331be3e34" ]; then exit 1; fi
  - if [ "$(./primesieve 1e8 -p6 | md5sum | cut -f1 -d' ')" != "028ead7ba3cbcc15809ca06481fc1bac" ]; then exit 1; fi
  # 6) Test using valgrind
  - cd ..
  - $CXX -Iinclude -O2 -std=c++11 -g src/*.cpp examples/cpp/nth_prime.cpp -o nth_prime -lpthread
  - valgrind --error-exitcode=1 ./nth_prime 500000000
  # 7) Test using cppcheck
  - rm -rf build
  - cppcheck . -q --error-exitcode=1 -iexamples/cpp/prev_prime.cpp -iexamples/cpp/primesieve_iterator.cpp -itest/next_prime1.cpp -itest/prev_prime1.cpp
